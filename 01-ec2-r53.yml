- name: create ec2 and route53
  hosts: local
  connection: local
  vars: 
    ami_id: "ami-09c813fb71547fc4f"
    sg_id: "sg-00026f72dcc9cd419"
    zone_id: "Z10173741Y5Y3INEWNGTN"
    domain_name: "malleswari.fun"
    #  we can pass instances through command line using -e
    # instances:
    # - mongodb
    # - redis
    # - user

  tasks: 
  - name: create ec2 instance  
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        name: "{{ item }}"
    loop: "{{ instances }}"    
    register: ec2_output

  # - name: print the ec2 output
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"  

  # - name: print public ip  
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].public_ip_address }}" 
  #   loop: "{{ ec2_output.results }}"   

  # - name: print private ip  
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].private_ip_address }}" 
  #   loop: "{{ ec2_output.results }}"  

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}"  # mongodb.malleswari.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}" 
      overwrite: true
    loop: "{{ ec2_output.results }}"  

# we are creating one record with public only for frontend
  - name: create one route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}"  # malleswari.fun
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}" 
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"